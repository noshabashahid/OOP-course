# Examples
#include <iostream>
using namespace std;

class Student {
private:
    int age; // Private data

public:
    void setAge(int a) { age = a; }  // Setter method
    int getAge() { return age; }      // Getter method
};

int main() {
    Student s;
    s.setAge(20);
    cout << "Student Age: " << s.getAge() << endl; // Accessing private data safely
    return 0;
}

#include <iostream>
using namespace std;

class Shape {
public:
    virtual void draw() = 0; // Pure virtual function (abstract method)
};

class Circle : public Shape {
public:
    void draw() override {
        cout << "Drawing a Circle" << endl;
    }
};

class Square : public Shape {
public:
    void draw() override {
        cout << "Drawing a Square" << endl;
    }
};

int main() {
    Shape* s1 = new Circle();
    Shape* s2 = new Square();

    s1->draw();
    s2->draw();

    delete s1;
    delete s2;

    return 0;
}
 
